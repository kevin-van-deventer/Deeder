{"ast":null,"code":"var _jsxFileName = \"/home/kevin/deeder/frontend/src/pages/MapsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { createConsumer } from \"@rails/actioncable\";\nimport axios from \"axios\";\nimport { GoogleMap, Marker, InfoWindow, LoadScriptNext } from \"@react-google-maps/api\";\nimport { jwtDecode } from \"jwt-decode\";\nimport Navbar from \"../components/NavBar\";\nimport \"./MapsPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100vh\",\n  position: \"relative\"\n};\nconst defaultCenter = {\n  lat: -25.7479,\n  lng: 28.2293\n}; // Default center (Pretoria, South Africa)\n\nconst oneTimeIcon = \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"; // Blue marker for one-time deeds\nconst materialIcon = \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\"; // Green marker for material deeds\n\nconst MapsPage = () => {\n  _s();\n  const [deeds, setDeeds] = useState([]);\n  const [selectedDeed, setSelectedDeed] = useState(null);\n  const [unfulfilledDeeds, setUnfulfilledDeeds] = useState(0);\n  const [userLocation, setUserLocation] = useState(defaultCenter); // Store user’s live location\n\n  const apiKey = \"AIzaSyAx_Rbj5JBqB_QStMi27jDFWMf3HJ-aZm0\"; // Replace with your actual API key\n  const token = localStorage.getItem(\"token\");\n  const userId = token ? jwtDecode(token).user_id : null;\n  useEffect(() => {\n    fetchDeeds();\n    getUserLocation(); // Get user’s live location\n\n    // ✅ Set up WebSocket subscription\n    const cable = createConsumer(\"ws://localhost:3000/cable\"); // Adjust URL if needed\n    const subscription = cable.subscriptions.create(\"DeedsChannel\", {\n      received: data => {\n        setDeeds(data.deeds); // Update deeds list dynamically\n        setUnfulfilledDeeds(data.unfulfilled_count); // Update unfulfilled deeds counter\n      }\n    });\n    return () => {\n      subscription.unsubscribe(); // Cleanup on component unmount\n    };\n  }, []);\n\n  // Fetch all unfulfilled deeds with lat/lon\n  const fetchDeeds = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3000/deeds\");\n      setDeeds(response.data);\n      const unfulfilledCount = response.data.filter(deed => deed.status === \"unfulfilled\").length;\n      setUnfulfilledDeeds(unfulfilledCount);\n    } catch (error) {\n      console.error(\"Error fetching deeds:\", error);\n    }\n  };\n\n  // Handle volunteer request\n  const handleVolunteer = async (deedId, requesterId) => {\n    if (userId === requesterId) {\n      alert(\"You cannot volunteer for your own deed.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:3000/deeds/${deedId}/volunteer`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(response.data.message);\n      fetchDeeds(); // Refresh deeds list\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error volunteering:\", error);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Failed to volunteer.\");\n    }\n  };\n\n  // Function to format date\n  const formatDate = dateString => {\n    if (!dateString) return \"N/A\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-US\", {\n      weekday: \"long\",\n      // Example: Monday\n      year: \"numeric\",\n      month: \"long\",\n      // Example: January\n      day: \"numeric\" // Example: 5\n    });\n  };\n\n  // Get user's live location using the Geolocation API\n  const getUserLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setUserLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, error => {\n        console.warn(\"Geolocation denied or unavailable:\", error);\n        setUserLocation(defaultCenter); // Fallback to default location\n      }, {\n        enableHighAccuracy: true\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n      setUserLocation(defaultCenter);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"maps-page\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-deeds-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(LoadScriptNext, {\n          googleMapsApiKey: apiKey,\n          children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n            mapContainerStyle: mapContainerStyle,\n            zoom: 10,\n            center: userLocation,\n            children: [deeds.map(deed => /*#__PURE__*/_jsxDEV(Marker, {\n              position: {\n                lat: parseFloat(deed.latitude),\n                lng: parseFloat(deed.longitude)\n              },\n              onClick: () => setSelectedDeed(deed),\n              icon: deed.deed_type === \"one-time\" ? oneTimeIcon : materialIcon // Set marker icon based on deed type\n            }, deed.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)), selectedDeed && /*#__PURE__*/_jsxDEV(InfoWindow, {\n              position: {\n                lat: parseFloat(selectedDeed.latitude),\n                lng: parseFloat(selectedDeed.longitude)\n              },\n              onCloseClick: () => setSelectedDeed(null),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: selectedDeed.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 24\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: selectedDeed.deed_type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 24\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Deeders:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 24\n                  }, this), \" \", selectedDeed.volunteer_count]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\" \", formatDate(selectedDeed.created_at)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 24\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this), userId && selectedDeed.requester_id !== userId && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleVolunteer(selectedDeed.id, selectedDeed.requester_id),\n                  children: \"Accept\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deeds-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Deeds \", unfulfilledDeeds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), deeds.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No deeds available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 33\n        }, this) : deeds.map(deed => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deed-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: deed.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: deed.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 20\n            }, this), \" \", deed.deed_type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Posted:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 20\n            }, this), \" \", formatDate(deed.created_at)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"deedButton\",\n            onClick: () => handleVolunteer(deed.id, deed.requester_id),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)]\n        }, deed.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(MapsPage, \"LJml68cJVDO46+LxPQdJM2Y7ouU=\");\n_c = MapsPage;\nexport default MapsPage;\nvar _c;\n$RefreshReg$(_c, \"MapsPage\");","map":{"version":3,"names":["React","useEffect","useState","createConsumer","axios","GoogleMap","Marker","InfoWindow","LoadScriptNext","jwtDecode","Navbar","jsxDEV","_jsxDEV","mapContainerStyle","width","height","position","defaultCenter","lat","lng","oneTimeIcon","materialIcon","MapsPage","_s","deeds","setDeeds","selectedDeed","setSelectedDeed","unfulfilledDeeds","setUnfulfilledDeeds","userLocation","setUserLocation","apiKey","token","localStorage","getItem","userId","user_id","fetchDeeds","getUserLocation","cable","subscription","subscriptions","create","received","data","unfulfilled_count","unsubscribe","response","get","unfulfilledCount","filter","deed","status","length","error","console","handleVolunteer","deedId","requesterId","alert","post","headers","Authorization","message","_error$response","_error$response$data","formatDate","dateString","date","Date","toLocaleDateString","weekday","year","month","day","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","warn","enableHighAccuracy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","zoom","center","map","parseFloat","onClick","icon","deed_type","id","onCloseClick","description","volunteer_count","created_at","requester_id","address","_c","$RefreshReg$"],"sources":["/home/kevin/deeder/frontend/src/pages/MapsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { createConsumer } from \"@rails/actioncable\";\n\nimport axios from \"axios\";\nimport { GoogleMap, Marker, InfoWindow, LoadScriptNext } from \"@react-google-maps/api\";\nimport { jwtDecode } from \"jwt-decode\";\n\nimport Navbar from \"../components/NavBar\";\nimport \"./MapsPage.css\";\n\nconst mapContainerStyle = { width: \"100%\", height: \"100vh\", position: \"relative\" };\nconst defaultCenter = { lat: -25.7479, lng: 28.2293 }; // Default center (Pretoria, South Africa)\n\nconst oneTimeIcon = \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"; // Blue marker for one-time deeds\nconst materialIcon = \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\"; // Green marker for material deeds\n\nconst MapsPage = () => {\n  const [deeds, setDeeds] = useState([]);\n  const [selectedDeed, setSelectedDeed] = useState(null);\n  const [unfulfilledDeeds, setUnfulfilledDeeds] = useState(0);\n  const [userLocation, setUserLocation] = useState(defaultCenter); // Store user’s live location\n\n  const apiKey = \"AIzaSyAx_Rbj5JBqB_QStMi27jDFWMf3HJ-aZm0\"; // Replace with your actual API key\n  const token = localStorage.getItem(\"token\");\n  const userId = token ? jwtDecode(token).user_id : null;\n\n  useEffect(() => {\n    fetchDeeds();\n    getUserLocation(); // Get user’s live location\n\n    // ✅ Set up WebSocket subscription\n    const cable = createConsumer(\"ws://localhost:3000/cable\"); // Adjust URL if needed\n    const subscription = cable.subscriptions.create(\"DeedsChannel\", {\n      received: (data) => {\n        setDeeds(data.deeds); // Update deeds list dynamically\n        setUnfulfilledDeeds(data.unfulfilled_count); // Update unfulfilled deeds counter\n      },\n    });\n\n    return () => {\n      subscription.unsubscribe(); // Cleanup on component unmount\n    };\n  }, []);\n\n  // Fetch all unfulfilled deeds with lat/lon\n  const fetchDeeds = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3000/deeds\");\n\n      setDeeds(response.data);\n      const unfulfilledCount = response.data.filter((deed) => deed.status === \"unfulfilled\").length;\n      setUnfulfilledDeeds(unfulfilledCount);\n    } catch (error) {\n      console.error(\"Error fetching deeds:\", error);\n    }\n  };\n\n  // Handle volunteer request\n  const handleVolunteer = async (deedId, requesterId) => {\n    if (userId === requesterId) {\n      alert(\"You cannot volunteer for your own deed.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\n        `http://localhost:3000/deeds/${deedId}/volunteer`,\n        {},\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      alert(response.data.message);\n      fetchDeeds(); // Refresh deeds list\n    } catch (error) {\n      console.error(\"Error volunteering:\", error);\n      alert(error.response?.data?.error || \"Failed to volunteer.\");\n    }\n  };\n\n  // Function to format date\n  const formatDate = (dateString) => {\n    if (!dateString) return \"N/A\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-US\", {\n      weekday: \"long\", // Example: Monday\n      year: \"numeric\",\n      month: \"long\", // Example: January\n      day: \"numeric\", // Example: 5\n    });\n  };\n\n  // Get user's live location using the Geolocation API\n  const getUserLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setUserLocation({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          });\n        },\n        (error) => {\n          console.warn(\"Geolocation denied or unavailable:\", error);\n          setUserLocation(defaultCenter); // Fallback to default location\n        },\n        { enableHighAccuracy: true }\n      );\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n      setUserLocation(defaultCenter);\n    }\n  };\n\n  return (\n    <div className=\"maps-page\">\n      <Navbar />\n\n      {/* Flex Container for Map and Latest Deeds */}\n      <div className=\"map-deeds-container\">\n        {/* Left Side: Map */}\n        <div className=\"map-container\">\n          <LoadScriptNext googleMapsApiKey={apiKey}>\n            <GoogleMap mapContainerStyle={mapContainerStyle} zoom={10} center={userLocation}>\n              {deeds.map((deed) => (\n                <Marker\n                  key={deed.id}\n                  position={{ lat: parseFloat(deed.latitude), lng: parseFloat(deed.longitude) }}\n                  onClick={() => setSelectedDeed(deed)}\n                  icon={deed.deed_type === \"one-time\" ? oneTimeIcon : materialIcon} // Set marker icon based on deed type\n                />\n              ))}\n\n              {selectedDeed && (\n                <InfoWindow position={{ lat: parseFloat(selectedDeed.latitude), lng: parseFloat(selectedDeed.longitude) }} onCloseClick={() => setSelectedDeed(null)}>\n                  <div>\n                    <p><strong>{selectedDeed.description}</strong></p>\n                    <p><strong>{selectedDeed.deed_type}</strong></p>\n                    <p><strong>Deeders:</strong> {selectedDeed.volunteer_count}</p>\n                    <p><strong> {formatDate(selectedDeed.created_at)}</strong></p>\n\n                    {userId && selectedDeed.requester_id !== userId && (\n                      <button onClick={() => handleVolunteer(selectedDeed.id, selectedDeed.requester_id)}>Accept</button>\n                    )}\n                  </div>\n                </InfoWindow>\n              )}\n            </GoogleMap>\n          </LoadScriptNext>\n        </div>\n\n        {/* Right Side: Latest Deeds */}\n        <div className=\"deeds-list\">\n          <h2>Deeds {unfulfilledDeeds}</h2>\n          {deeds.length === 0 ? <p>No deeds available.</p> : (\n            deeds.map((deed) => (\n              <div key={deed.id} className=\"deed-card\">\n                <p><strong>{deed.description}</strong></p>\n                <p>{deed.address}</p>\n                <p><strong>Type:</strong> {deed.deed_type}</p>\n                <p><strong>Posted:</strong> {formatDate(deed.created_at)}</p>\n                <button id=\"deedButton\" onClick={() => handleVolunteer(deed.id, deed.requester_id)}>Accept</button>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MapsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}