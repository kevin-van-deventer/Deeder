{"ast":null,"code":"var _jsxFileName = \"/home/kevin/deeder/frontend/src/components/NavBar.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    // Check if the user is logged in (example: from localStorage or JWT)\n    const token = localStorage.getItem(\"token\"); // Assume token is stored after login\n    setIsLoggedIn(!!token); // Converts token existence to true/false\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/maps\",\n          children: \"Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Link, {\n          onClick: handleLogout,\n          to: \"/logout\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["useEffect","useState","Link","jsxDEV","_jsxDEV","Navbar","_s","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleLogout","_c","$RefreshReg$"],"sources":["/home/kevin/deeder/frontend/src/components/NavBar.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n    // Check if the user is logged in (example: from localStorage or JWT)\n    const token = localStorage.getItem(\"token\"); // Assume token is stored after login\n    setIsLoggedIn(!!token); // Converts token existence to true/false\n    }, []);\n\n    return (\n    <nav>\n        <ul>\n        <li>\n            <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n            <Link to=\"/dashboard\">Dashboard</Link>\n        </li>\n        <li>\n            <Link to=\"/maps\">Map</Link>\n        </li>\n        <li >\n            {isLoggedIn ? (\n                <Link onClick={handleLogout} to=\"/logout\">Logout</Link>\n            ) : (\n                <Link to=\"/login\">Login</Link>\n            )}\n        </li>\n        </ul>\n    </nav>\n    );\n};\n\nexport default Navbar;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEnDD,SAAS,CAAC,MAAM;IAChB;IACA,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7CH,aAAa,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACAL,OAAA;IAAAQ,QAAA,eACIR,OAAA;MAAAQ,QAAA,gBACAR,OAAA;QAAAQ,QAAA,eACIR,OAAA,CAACF,IAAI;UAACW,EAAE,EAAC,GAAG;UAAAD,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACLb,OAAA;QAAAQ,QAAA,eACIR,OAAA,CAACF,IAAI;UAACW,EAAE,EAAC,YAAY;UAAAD,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACLb,OAAA;QAAAQ,QAAA,eACIR,OAAA,CAACF,IAAI;UAACW,EAAE,EAAC,OAAO;UAAAD,QAAA,EAAC;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACLb,OAAA;QAAAQ,QAAA,EACKL,UAAU,gBACPH,OAAA,CAACF,IAAI;UAACgB,OAAO,EAAEC,YAAa;UAACN,EAAE,EAAC,SAAS;UAAAD,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,gBAEvDb,OAAA,CAACF,IAAI;UAACW,EAAE,EAAC,QAAQ;UAAAD,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAChC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACX,EAAA,CAhCID,MAAM;AAAAe,EAAA,GAANf,MAAM;AAkCZ,eAAeA,MAAM;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}