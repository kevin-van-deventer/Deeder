{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import consumer from \"../services/actionCableConsumer\";\n// import axios from \"axios\";\n// // import css file\n// import \"./ChatPage.css\";\n\n// function ChatPage() {\n//   const { requesterId, volunteerId } = useParams(); // Get user IDs from URL\n//   const [messages, setMessages] = useState([]);\n//   const [newMessage, setNewMessage] = useState(\"\");\n//   const [chatRoomId, setChatRoomId] = useState(null);\n\n//   const token = localStorage.getItem(\"token\");\n\n//   useEffect(() => {\n//     const fetchChatRoom = async () => {\n//       try {\n//         const response = await axios.post(\n//           `http://localhost:3000/chat_rooms`,\n//           { deed_id: requesterId }, // Use requesterId to find the deed\n//           { headers: { Authorization: `Bearer ${token}` } }\n//         );\n\n//         setChatRoomId(response.data.chat_room.id);\n//         fetchMessages(response.data.chat_room.id);\n//       } catch (error) {\n//         console.error(\"Error fetching chat room:\", error);\n//       }\n//     };\n\n//     const fetchMessages = async (chatRoomId) => {\n//       try {\n//         const response = await axios.get(\n//           `http://localhost:3000/chat_rooms/${chatRoomId}`,\n//           { headers: { Authorization: `Bearer ${token}` } }\n//         );\n\n//         setMessages(response.data.messages);\n//       } catch (error) {\n//         console.error(\"Error fetching messages:\", error);\n//       }\n//     };\n\n//     fetchChatRoom();\n//   }, [requesterId, token]);\n\n//   useEffect(() => {\n//     if (!chatRoomId) return;\n\n//     const subscription = consumer.subscriptions.create(\n//       { channel: \"ChatRoomChannel\", id: chatRoomId },\n//       {\n//         received(data) {\n//           setMessages((prev) => [...prev, data.message]);\n//         },\n//       }\n//     );\n\n//     return () => {\n//       subscription.unsubscribe();\n//     };\n//   }, [chatRoomId]);\n\n//   const handleSend = async (e) => {\n//     e.preventDefault();\n//     if (!newMessage.trim() || !chatRoomId) return;\n\n//     try {\n//       await axios.post(\n//         `http://localhost:3000/chat_rooms/${chatRoomId}/messages`,\n//         { content: newMessage },\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n//       setNewMessage(\"\");\n//     } catch (error) {\n//       console.error(\"Error sending message:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"chat-container\">\n//       <div className=\"chat-content\">\n//         <div className=\"top-section\">\n//           <div className=\"chat-section\">\n\n//           <h2>Chat</h2>\n//           <div className=\"messages\">\n//             {messages.map((msg, index) => (\n//               <div key={index} className=\"message\">\n//                 <strong>{msg.user.name}:</strong> {msg.content}\n//               </div>\n//             ))}\n//           </div>\n//           <form onSubmit={handleSend}>\n//             <input\n//               type=\"text\"\n//               value={newMessage}\n//               onChange={(e) => setNewMessage(e.target.value)}\n//               placeholder=\"Type a message...\" />\n//             <button type=\"submit\">Send</button>\n//           </form>\n//         </div>\n//       </div>\n//       </div>\n//       </div>\n\n//   );\n// }\n\n// export default ChatPage;","map":{"version":3,"names":[],"sources":["/home/kevin/deeder/frontend/src/pages/ChatPage.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import consumer from \"../services/actionCableConsumer\";\n// import axios from \"axios\";\n// // import css file\n// import \"./ChatPage.css\";\n\n// function ChatPage() {\n//   const { requesterId, volunteerId } = useParams(); // Get user IDs from URL\n//   const [messages, setMessages] = useState([]);\n//   const [newMessage, setNewMessage] = useState(\"\");\n//   const [chatRoomId, setChatRoomId] = useState(null);\n\n//   const token = localStorage.getItem(\"token\");\n\n//   useEffect(() => {\n//     const fetchChatRoom = async () => {\n//       try {\n//         const response = await axios.post(\n//           `http://localhost:3000/chat_rooms`,\n//           { deed_id: requesterId }, // Use requesterId to find the deed\n//           { headers: { Authorization: `Bearer ${token}` } }\n//         );\n\n//         setChatRoomId(response.data.chat_room.id);\n//         fetchMessages(response.data.chat_room.id);\n//       } catch (error) {\n//         console.error(\"Error fetching chat room:\", error);\n//       }\n//     };\n\n//     const fetchMessages = async (chatRoomId) => {\n//       try {\n//         const response = await axios.get(\n//           `http://localhost:3000/chat_rooms/${chatRoomId}`,\n//           { headers: { Authorization: `Bearer ${token}` } }\n//         );\n\n//         setMessages(response.data.messages);\n//       } catch (error) {\n//         console.error(\"Error fetching messages:\", error);\n//       }\n//     };\n\n//     fetchChatRoom();\n//   }, [requesterId, token]);\n\n//   useEffect(() => {\n//     if (!chatRoomId) return;\n\n//     const subscription = consumer.subscriptions.create(\n//       { channel: \"ChatRoomChannel\", id: chatRoomId },\n//       {\n//         received(data) {\n//           setMessages((prev) => [...prev, data.message]);\n//         },\n//       }\n//     );\n\n//     return () => {\n//       subscription.unsubscribe();\n//     };\n//   }, [chatRoomId]);\n\n//   const handleSend = async (e) => {\n//     e.preventDefault();\n//     if (!newMessage.trim() || !chatRoomId) return;\n\n//     try {\n//       await axios.post(\n//         `http://localhost:3000/chat_rooms/${chatRoomId}/messages`,\n//         { content: newMessage },\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n//       setNewMessage(\"\");\n//     } catch (error) {\n//       console.error(\"Error sending message:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"chat-container\">\n//       <div className=\"chat-content\">\n//         <div className=\"top-section\">\n//           <div className=\"chat-section\">\n            \n//           <h2>Chat</h2>\n//           <div className=\"messages\">\n//             {messages.map((msg, index) => (\n//               <div key={index} className=\"message\">\n//                 <strong>{msg.user.name}:</strong> {msg.content}\n//               </div>\n//             ))}\n//           </div>\n//           <form onSubmit={handleSend}>\n//             <input\n//               type=\"text\"\n//               value={newMessage}\n//               onChange={(e) => setNewMessage(e.target.value)}\n//               placeholder=\"Type a message...\" />\n//             <button type=\"submit\">Send</button>\n//           </form>\n//         </div>\n//       </div>\n//       </div>\n//       </div>\n\n//   );\n// }\n\n// export default ChatPage;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}