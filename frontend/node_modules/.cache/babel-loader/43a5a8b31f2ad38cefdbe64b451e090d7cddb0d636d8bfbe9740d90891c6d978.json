{"ast":null,"code":"var _jsxFileName = \"/home/kevin/deeder/frontend/src/pages/MapsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { createConsumer } from \"@rails/actioncable\";\nimport axios from \"axios\";\nimport { GoogleMap, Marker, InfoWindow, LoadScriptNext } from \"@react-google-maps/api\";\nimport { jwtDecode } from \"jwt-decode\";\nimport Navbar from \"../components/NavBar\";\nimport \"./MapsPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = localStorage.getItem(\"token\");\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100vh\",\n  position: \"relative\"\n};\nconst defaultCenter = {\n  lat: -25.7479,\n  lng: 28.2293\n}; // Default center (Pretoria, South Africa)\n\nconst oneTimeIcon = \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"; // Blue marker for one-time deeds\nconst materialIcon = \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\"; // Green marker for material deeds\n\nconst MapsPage = () => {\n  _s();\n  const [deeds, setDeeds] = useState([]);\n  const [selectedDeed, setSelectedDeed] = useState(null);\n  const [unfulfilledDeeds, setUnfulfilledDeeds] = useState(0);\n  const [userLocation, setUserLocation] = useState(defaultCenter); // Store user’s live location\n\n  const apiKey = \"AIzaSyAx_Rbj5JBqB_QStMi27jDFWMf3HJ-aZm0\"; // Replace with your actual API key\n  const token = localStorage.getItem(\"token\");\n  const userId = token ? jwtDecode(token).user_id : null;\n  useEffect(() => {\n    fetchDeeds();\n    getUserLocation(); // Get user’s live location\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      console.error(\"No authentication token found. WebSocket connection will fail.\");\n      return;\n    }\n    // ✅ Set up WebSocket subscription once\n    const cable = createConsumer(\"ws://localhost:3000/cable\"); // Adjust URL if needed\n    const subscription = cable.subscriptions.create(\"DeedsChannel\", {\n      received: data => {\n        console.log(\"WebSocket Update Received:\", data);\n\n        // ✅ Merge new deeds with existing ones (Prevent overriding old deeds)\n        setDeeds(prevDeeds => {\n          const existingIds = new Set(prevDeeds.map(deed => deed.id));\n          const newDeeds = data.deeds.filter(deed => !existingIds.has(deed.id));\n          return [...newDeeds, ...prevDeeds]; // Add new deeds to the list\n        });\n\n        // ✅ Update unfulfilled deeds count\n        setUnfulfilledDeeds(data.unfulfilled_count);\n      }\n    });\n    return () => {\n      subscription.unsubscribe(); // Cleanup WebSocket on unmount\n    };\n  }, []);\n\n  // Fetch all unfulfilled deeds with lat/lon\n  const fetchDeeds = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3000/deeds\");\n      setDeeds(response.data);\n      setUnfulfilledDeeds(response.data.filter(deed => deed.status === \"unfulfilled\").length);\n    } catch (error) {\n      console.error(\"Error fetching deeds:\", error);\n    }\n  };\n\n  // Handle volunteer request\n  const handleVolunteer = async (deedId, requesterId) => {\n    if (userId === requesterId) {\n      alert(\"You cannot volunteer for your own deed.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:3000/deeds/${deedId}/volunteer`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(response.data.message);\n      fetchDeeds(); // Refresh deeds list\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error volunteering:\", error);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Failed to volunteer.\");\n    }\n  };\n\n  // Get user's live location using the Geolocation API\n  const getUserLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setUserLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, error => {\n        console.warn(\"Geolocation denied or unavailable:\", error);\n        setUserLocation(defaultCenter); // Fallback to default location\n      }, {\n        enableHighAccuracy: true\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n      setUserLocation(defaultCenter);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"maps-page\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-deeds-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(LoadScriptNext, {\n          googleMapsApiKey: apiKey,\n          children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n            mapContainerStyle: mapContainerStyle,\n            zoom: 10,\n            center: userLocation,\n            children: [deeds.map(deed => /*#__PURE__*/_jsxDEV(Marker, {\n              position: {\n                lat: parseFloat(deed.latitude),\n                lng: parseFloat(deed.longitude)\n              },\n              onClick: () => setSelectedDeed(deed),\n              icon: deed.deed_type === \"one-time\" ? oneTimeIcon : materialIcon // Set marker icon based on deed type\n            }, deed.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)), selectedDeed && /*#__PURE__*/_jsxDEV(InfoWindow, {\n              position: {\n                lat: parseFloat(selectedDeed.latitude),\n                lng: parseFloat(selectedDeed.longitude)\n              },\n              onCloseClick: () => setSelectedDeed(null),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: selectedDeed.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 24\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: selectedDeed.deed_type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 24\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Deeders:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 24\n                  }, this), \" \", selectedDeed.volunteer_count]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this), userId && selectedDeed.requester_id !== userId && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleVolunteer(selectedDeed.id, selectedDeed.requester_id),\n                  children: \"Accept\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deeds-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Deeds (\", unfulfilledDeeds, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), deeds.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No deeds available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 33\n        }, this) : deeds.map(deed => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deed-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: deed.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: deed.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 20\n            }, this), \" \", deed.deed_type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"deedButton\",\n            onClick: () => handleVolunteer(deed.id, deed.requester_id),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)]\n        }, deed.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(MapsPage, \"LJml68cJVDO46+LxPQdJM2Y7ouU=\");\n_c = MapsPage;\nexport default MapsPage;\nvar _c;\n$RefreshReg$(_c, \"MapsPage\");","map":{"version":3,"names":["React","useEffect","useState","createConsumer","axios","GoogleMap","Marker","InfoWindow","LoadScriptNext","jwtDecode","Navbar","jsxDEV","_jsxDEV","token","localStorage","getItem","mapContainerStyle","width","height","position","defaultCenter","lat","lng","oneTimeIcon","materialIcon","MapsPage","_s","deeds","setDeeds","selectedDeed","setSelectedDeed","unfulfilledDeeds","setUnfulfilledDeeds","userLocation","setUserLocation","apiKey","userId","user_id","fetchDeeds","getUserLocation","console","error","cable","subscription","subscriptions","create","received","data","log","prevDeeds","existingIds","Set","map","deed","id","newDeeds","filter","has","unfulfilled_count","unsubscribe","response","get","status","length","handleVolunteer","deedId","requesterId","alert","post","headers","Authorization","message","_error$response","_error$response$data","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","warn","enableHighAccuracy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","zoom","center","parseFloat","onClick","icon","deed_type","onCloseClick","description","volunteer_count","requester_id","address","_c","$RefreshReg$"],"sources":["/home/kevin/deeder/frontend/src/pages/MapsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { createConsumer } from \"@rails/actioncable\";\n\nimport axios from \"axios\";\nimport { GoogleMap, Marker, InfoWindow, LoadScriptNext } from \"@react-google-maps/api\";\nimport { jwtDecode } from \"jwt-decode\";\n\nimport Navbar from \"../components/NavBar\";\nimport \"./MapsPage.css\";\n\nconst token = localStorage.getItem(\"token\");\n\nconst mapContainerStyle = { width: \"100%\", height: \"100vh\", position: \"relative\" };\nconst defaultCenter = { lat: -25.7479, lng: 28.2293 }; // Default center (Pretoria, South Africa)\n\nconst oneTimeIcon = \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"; // Blue marker for one-time deeds\nconst materialIcon = \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\"; // Green marker for material deeds\n\nconst MapsPage = () => {\n  const [deeds, setDeeds] = useState([]);\n  const [selectedDeed, setSelectedDeed] = useState(null);\n  const [unfulfilledDeeds, setUnfulfilledDeeds] = useState(0);\n  const [userLocation, setUserLocation] = useState(defaultCenter); // Store user’s live location\n\n  const apiKey = \"AIzaSyAx_Rbj5JBqB_QStMi27jDFWMf3HJ-aZm0\"; // Replace with your actual API key\n  const token = localStorage.getItem(\"token\");\n  const userId = token ? jwtDecode(token).user_id : null;\n\n  useEffect(() => {\n    fetchDeeds();\n    getUserLocation(); // Get user’s live location\n    const token = localStorage.getItem(\"token\");\n\n    if (!token) {\n      console.error(\"No authentication token found. WebSocket connection will fail.\");\n      return;\n    }\n    // ✅ Set up WebSocket subscription once\n    const cable = createConsumer(\"ws://localhost:3000/cable\"); // Adjust URL if needed\n    const subscription = cable.subscriptions.create(\"DeedsChannel\", {\n      received: (data) => {\n        console.log(\"WebSocket Update Received:\", data);\n\n        // ✅ Merge new deeds with existing ones (Prevent overriding old deeds)\n        setDeeds((prevDeeds) => {\n          const existingIds = new Set(prevDeeds.map((deed) => deed.id));\n          const newDeeds = data.deeds.filter((deed) => !existingIds.has(deed.id));\n          return [...newDeeds, ...prevDeeds]; // Add new deeds to the list\n        });\n\n        // ✅ Update unfulfilled deeds count\n        setUnfulfilledDeeds(data.unfulfilled_count);\n      },\n    });\n\n    return () => {\n      subscription.unsubscribe(); // Cleanup WebSocket on unmount\n    };\n  }, []);\n\n  // Fetch all unfulfilled deeds with lat/lon\n  const fetchDeeds = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3000/deeds\");\n      setDeeds(response.data);\n      setUnfulfilledDeeds(response.data.filter((deed) => deed.status === \"unfulfilled\").length);\n    } catch (error) {\n      console.error(\"Error fetching deeds:\", error);\n    }\n  };\n\n  // Handle volunteer request\n  const handleVolunteer = async (deedId, requesterId) => {\n    if (userId === requesterId) {\n      alert(\"You cannot volunteer for your own deed.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\n        `http://localhost:3000/deeds/${deedId}/volunteer`,\n        {},\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      alert(response.data.message);\n      fetchDeeds(); // Refresh deeds list\n    } catch (error) {\n      console.error(\"Error volunteering:\", error);\n      alert(error.response?.data?.error || \"Failed to volunteer.\");\n    }\n  };\n\n  // Get user's live location using the Geolocation API\n  const getUserLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setUserLocation({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          });\n        },\n        (error) => {\n          console.warn(\"Geolocation denied or unavailable:\", error);\n          setUserLocation(defaultCenter); // Fallback to default location\n        },\n        { enableHighAccuracy: true }\n      );\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n      setUserLocation(defaultCenter);\n    }\n  };\n\n  return (\n    <div className=\"maps-page\">\n      <Navbar />\n\n      {/* Flex Container for Map and Latest Deeds */}\n      <div className=\"map-deeds-container\">\n        {/* Left Side: Map */}\n        <div className=\"map-container\">\n          <LoadScriptNext googleMapsApiKey={apiKey}>\n            <GoogleMap mapContainerStyle={mapContainerStyle} zoom={10} center={userLocation}>\n              {deeds.map((deed) => (\n                <Marker\n                  key={deed.id}\n                  position={{ lat: parseFloat(deed.latitude), lng: parseFloat(deed.longitude) }}\n                  onClick={() => setSelectedDeed(deed)}\n                  icon={deed.deed_type === \"one-time\" ? oneTimeIcon : materialIcon} // Set marker icon based on deed type\n                />\n              ))}\n\n              {selectedDeed && (\n                <InfoWindow position={{ lat: parseFloat(selectedDeed.latitude), lng: parseFloat(selectedDeed.longitude) }} onCloseClick={() => setSelectedDeed(null)}>\n                  <div>\n                    <p><strong>{selectedDeed.description}</strong></p>\n                    <p><strong>{selectedDeed.deed_type}</strong></p>\n                    <p><strong>Deeders:</strong> {selectedDeed.volunteer_count}</p>\n\n                    {userId && selectedDeed.requester_id !== userId && (\n                      <button onClick={() => handleVolunteer(selectedDeed.id, selectedDeed.requester_id)}>Accept</button>\n                    )}\n                  </div>\n                </InfoWindow>\n              )}\n            </GoogleMap>\n          </LoadScriptNext>\n        </div>\n\n        {/* Right Side: Latest Deeds */}\n        <div className=\"deeds-list\">\n          <h2>Deeds ({unfulfilledDeeds})</h2>\n          {deeds.length === 0 ? <p>No deeds available.</p> : (\n            deeds.map((deed) => (\n              <div key={deed.id} className=\"deed-card\">\n                <p><strong>{deed.description}</strong></p>\n                <p>{deed.address}</p>\n                <p><strong>Type:</strong> {deed.deed_type}</p>\n                <button id=\"deedButton\" onClick={() => handleVolunteer(deed.id, deed.requester_id)}>Accept</button>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MapsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}