{"ast":null,"code":"var _jsxFileName = \"/home/kevin/deeder/frontend/src/pages/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport consumer from \"../services/actionCableConsumer\";\nimport axios from \"axios\";\n// import css file\nimport \"./ChatPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatPage() {\n  _s();\n  const {\n    requesterId,\n    volunteerId\n  } = useParams(); // Get user IDs from URL\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [chatRoomId, setChatRoomId] = useState(null);\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    const fetchChatRoom = async () => {\n      try {\n        const response = await axios.post(`http://localhost:3000/chat_rooms`, {\n          deed_id: requesterId\n        },\n        // Use requesterId to find the deed\n        {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setChatRoomId(response.data.chat_room.id);\n        fetchMessages(response.data.chat_room.id);\n      } catch (error) {\n        console.error(\"Error fetching chat room:\", error);\n      }\n    };\n    const fetchMessages = async chatRoomId => {\n      try {\n        const response = await axios.get(`http://localhost:3000/chat_rooms/${chatRoomId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMessages(response.data.messages);\n      } catch (error) {\n        console.error(\"Error fetching messages:\", error);\n      }\n    };\n    fetchChatRoom();\n  }, [requesterId, token]);\n  useEffect(() => {\n    if (!chatRoomId) return;\n    const subscription = consumer.subscriptions.create({\n      channel: \"ChatRoomChannel\",\n      id: chatRoomId\n    }, {\n      received(data) {\n        setMessages(prev => [...prev, data.message]);\n      }\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [chatRoomId]);\n  const handleSend = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !chatRoomId) return;\n    try {\n      await axios.post(`http://localhost:3000/chat_rooms/${chatRoomId}/messages`, {\n        content: newMessage\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSend,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newMessage,\n              onChange: e => setNewMessage(e.target.value),\n              placeholder: \"Type a message...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"EluDqBsez9NFHkoePsFVx4R0mGs=\", false, function () {\n  return [useParams];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","consumer","axios","jsxDEV","_jsxDEV","ChatPage","_s","requesterId","volunteerId","messages","setMessages","newMessage","setNewMessage","chatRoomId","setChatRoomId","token","localStorage","getItem","fetchChatRoom","response","post","deed_id","headers","Authorization","data","chat_room","id","fetchMessages","error","console","get","subscription","subscriptions","create","channel","received","prev","message","unsubscribe","handleSend","e","preventDefault","trim","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/kevin/deeder/frontend/src/pages/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport consumer from \"../services/actionCableConsumer\";\nimport axios from \"axios\";\n// import css file\nimport \"./ChatPage.css\";\n\nfunction ChatPage() {\n  const { requesterId, volunteerId } = useParams(); // Get user IDs from URL\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [chatRoomId, setChatRoomId] = useState(null);\n\n  const token = localStorage.getItem(\"token\");\n\n  useEffect(() => {\n    const fetchChatRoom = async () => {\n      try {\n        const response = await axios.post(\n          `http://localhost:3000/chat_rooms`,\n          { deed_id: requesterId }, // Use requesterId to find the deed\n          { headers: { Authorization: `Bearer ${token}` } }\n        );\n\n        setChatRoomId(response.data.chat_room.id);\n        fetchMessages(response.data.chat_room.id);\n      } catch (error) {\n        console.error(\"Error fetching chat room:\", error);\n      }\n    };\n\n    const fetchMessages = async (chatRoomId) => {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/chat_rooms/${chatRoomId}`,\n          { headers: { Authorization: `Bearer ${token}` } }\n        );\n\n        setMessages(response.data.messages);\n      } catch (error) {\n        console.error(\"Error fetching messages:\", error);\n      }\n    };\n\n    fetchChatRoom();\n  }, [requesterId, token]);\n\n  useEffect(() => {\n    if (!chatRoomId) return;\n\n    const subscription = consumer.subscriptions.create(\n      { channel: \"ChatRoomChannel\", id: chatRoomId },\n      {\n        received(data) {\n          setMessages((prev) => [...prev, data.message]);\n        },\n      }\n    );\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [chatRoomId]);\n\n  const handleSend = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim() || !chatRoomId) return;\n\n    try {\n      await axios.post(\n        `http://localhost:3000/chat_rooms/${chatRoomId}/messages`,\n        { content: newMessage },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-content\">\n        <div className=\"top-section\">\n          <div className=\"chat-section\">\n            \n          <h2>Chat</h2>\n          <div className=\"messages\">\n            {/* {messages.map((msg, index) => (\n              <div key={index} className=\"message\">\n                <strong>{msg.user.name}:</strong> {msg.content}\n              </div>\n            ))} */}\n          </div>\n          <form onSubmit={handleSend}>\n            <input\n              type=\"text\"\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              placeholder=\"Type a message...\" />\n            <button type=\"submit\">Send</button>\n          </form>\n        </div>\n      </div>\n      </div>\n      </div>\n\n  );\n}\n\nexport default ChatPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}