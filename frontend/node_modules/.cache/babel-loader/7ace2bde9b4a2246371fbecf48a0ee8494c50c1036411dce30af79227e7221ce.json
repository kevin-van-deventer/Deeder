{"ast":null,"code":"var _jsxFileName = \"/home/kevin/deeder/frontend/src/pages/MapsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { GoogleMap, Marker, InfoWindow, LoadScriptNext } from \"@react-google-maps/api\";\nimport { jwtDecode } from \"jwt-decode\";\nimport \"./MapsPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100vh\"\n};\n// chamge center of map to be current logged in users lat and lon\nconst defaultCenter = {\n  lat: -25.7479,\n  lng: 28.2293\n}; // Default center (Pretoria, South Africa)\n\nconst MapsPage = () => {\n  _s();\n  const [deeds, setDeeds] = useState([]);\n  const [selectedDeed, setSelectedDeed] = useState(null);\n  const [userLocation, setUserLocation] = useState(defaultCenter); // Store user’s live location\n\n  const apiKey = \"AIzaSyAx_Rbj5JBqB_QStMi27jDFWMf3HJ-aZm0\"; // Replace with your actual API key\n  const token = localStorage.getItem(\"token\");\n  const userId = token ? jwtDecode(token).user_id : null;\n  useEffect(() => {\n    fetchDeeds();\n    getUserLocation(); // Get user’s live location\n  }, []);\n\n  // Fetch all unfulfilled deeds with lat/lon\n  const fetchDeeds = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3000/deeds\");\n      setDeeds(response.data);\n    } catch (error) {\n      console.error(\"Error fetching deeds:\", error);\n    }\n  };\n\n  // Handle volunteer request\n  const handleVolunteer = async (deedId, requesterId) => {\n    if (userId === requesterId) {\n      alert(\"You cannot volunteer for your own deed.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:3000/deeds/${deedId}/volunteer`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(response.data.message);\n      fetchDeeds(); // Refresh deeds list\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error volunteering:\", error);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Failed to volunteer.\");\n    }\n  };\n\n  // Function to format date\n  const formatDate = dateString => {\n    if (!dateString) return \"N/A\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-US\", {\n      weekday: \"long\",\n      // Example: Monday\n      year: \"numeric\",\n      month: \"long\",\n      // Example: January\n      day: \"numeric\" // Example: 5\n    });\n  };\n\n  // Get user's live location using the Geolocation API\n  const getUserLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setUserLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, error => {\n        console.warn(\"Geolocation denied or unavailable:\", error);\n        setUserLocation(defaultCenter); // Fallback to default location\n      }, {\n        enableHighAccuracy: true\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n      setUserLocation(defaultCenter);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScriptNext, {\n    googleMapsApiKey: apiKey,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 10,\n      center: userLocation,\n      children: [deeds.map(deed => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: parseFloat(deed.latitude),\n          lng: parseFloat(deed.longitude)\n        },\n        onClick: () => setSelectedDeed(deed)\n      }, deed.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)), selectedDeed && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: {\n          lat: parseFloat(selectedDeed.latitude),\n          lng: parseFloat(selectedDeed.longitude)\n        },\n        onCloseClick: () => setSelectedDeed(null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedDeed.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 18\n            }, this), \" \", selectedDeed.deed_type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Volunteers:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 18\n            }, this), \" \", selectedDeed.volunteer_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 18\n            }, this), \" \", selectedDeed.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Created On:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 18\n            }, this), \" \", formatDate(selectedDeed.created_at)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), userId && selectedDeed.requester_id !== userId && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVolunteer(selectedDeed.id, selectedDeed.requester_id),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(MapsPage, \"PerkZpA2p1pujk0kyFQCae/JFaw=\");\n_c = MapsPage;\nexport default MapsPage;\nvar _c;\n$RefreshReg$(_c, \"MapsPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","GoogleMap","Marker","InfoWindow","LoadScriptNext","jwtDecode","jsxDEV","_jsxDEV","mapContainerStyle","width","height","defaultCenter","lat","lng","MapsPage","_s","deeds","setDeeds","selectedDeed","setSelectedDeed","userLocation","setUserLocation","apiKey","token","localStorage","getItem","userId","user_id","fetchDeeds","getUserLocation","response","get","data","error","console","handleVolunteer","deedId","requesterId","alert","post","headers","Authorization","message","_error$response","_error$response$data","formatDate","dateString","date","Date","toLocaleDateString","weekday","year","month","day","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","warn","enableHighAccuracy","googleMapsApiKey","children","zoom","center","map","deed","parseFloat","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","onCloseClick","description","deed_type","volunteer_count","status","created_at","requester_id","_c","$RefreshReg$"],"sources":["/home/kevin/deeder/frontend/src/pages/MapsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { GoogleMap, Marker, InfoWindow, LoadScriptNext } from \"@react-google-maps/api\";\nimport { jwtDecode } from \"jwt-decode\";\n\nimport \"./MapsPage.css\";\n\nconst mapContainerStyle = { width: \"100%\", height: \"100vh\" };\n// chamge center of map to be current logged in users lat and lon\nconst defaultCenter = { lat: -25.7479, lng: 28.2293 }; // Default center (Pretoria, South Africa)\n\nconst MapsPage = () => {\n  const [deeds, setDeeds] = useState([]);\n  const [selectedDeed, setSelectedDeed] = useState(null);\n  const [userLocation, setUserLocation] = useState(defaultCenter); // Store user’s live location\n  \n  const apiKey = \"AIzaSyAx_Rbj5JBqB_QStMi27jDFWMf3HJ-aZm0\"; // Replace with your actual API key\n  const token = localStorage.getItem(\"token\");\n  const userId = token ? jwtDecode(token).user_id : null;\n\n  useEffect(() => {\n    fetchDeeds();\n    getUserLocation(); // Get user’s live location\n  }, []);\n\n  // Fetch all unfulfilled deeds with lat/lon\n  const fetchDeeds = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3000/deeds\");\n      setDeeds(response.data);\n    } catch (error) {\n      console.error(\"Error fetching deeds:\", error);\n    }\n  };\n\n  // Handle volunteer request\n  const handleVolunteer = async (deedId, requesterId) => {\n    if (userId === requesterId) {\n      alert(\"You cannot volunteer for your own deed.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\n        `http://localhost:3000/deeds/${deedId}/volunteer`,\n        {},\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      alert(response.data.message);\n      fetchDeeds(); // Refresh deeds list\n    } catch (error) {\n      console.error(\"Error volunteering:\", error);\n      alert(error.response?.data?.error || \"Failed to volunteer.\");\n    }\n  };\n\n   // Function to format date\n   const formatDate = (dateString) => {\n    if (!dateString) return \"N/A\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-US\", {\n      weekday: \"long\", // Example: Monday\n      year: \"numeric\",\n      month: \"long\", // Example: January\n      day: \"numeric\", // Example: 5\n    });\n  };\n\n  // Get user's live location using the Geolocation API\n  const getUserLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setUserLocation({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          });\n        },\n        (error) => {\n          console.warn(\"Geolocation denied or unavailable:\", error);\n          setUserLocation(defaultCenter); // Fallback to default location\n        },\n        { enableHighAccuracy: true }\n      );\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n      setUserLocation(defaultCenter);\n    }\n  };\n\n  return (\n    <LoadScriptNext googleMapsApiKey={apiKey}>\n      <GoogleMap mapContainerStyle={mapContainerStyle} zoom={10} center={userLocation}>\n        {deeds.map((deed) => (\n          <Marker\n            key={deed.id}\n            position={{ lat: parseFloat(deed.latitude), lng: parseFloat(deed.longitude) }}\n            onClick={() => setSelectedDeed(deed)}\n          />\n        ))}\n\n        {selectedDeed && (\n          <InfoWindow\n            position={{ lat: parseFloat(selectedDeed.latitude), lng: parseFloat(selectedDeed.longitude) }}\n            onCloseClick={() => setSelectedDeed(null)}\n          >\n            <div>\n              <h3>{selectedDeed.description}</h3>\n              <p><strong>Type:</strong> {selectedDeed.deed_type}</p>\n              <p><strong>Volunteers:</strong> {selectedDeed.volunteer_count}</p>\n              <p><strong>Status:</strong> {selectedDeed.status}</p>\n              <p><strong>Created On:</strong> {formatDate(selectedDeed.created_at)}</p>\n              {userId && selectedDeed.requester_id !== userId && (\n                <button onClick={() => handleVolunteer(selectedDeed.id, selectedDeed.requester_id)}>\n                  Accept\n                </button>\n              )}\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    </LoadScriptNext>\n  );\n};\n\nexport default MapsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}