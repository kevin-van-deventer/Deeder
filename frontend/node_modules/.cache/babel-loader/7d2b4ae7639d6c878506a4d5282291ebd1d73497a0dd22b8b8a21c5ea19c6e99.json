{"ast":null,"code":"var _jsxFileName = \"/home/kevin/deeder/frontend/src/pages/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { createConsumer } from \"@rails/actioncable\";\nimport \"./ChatPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [deeds, setDeeds] = useState([]);\n  const [volunteeredDeeds, setVolunteeredDeeds] = useState([]);\n  const [chatRoom, setChatRoom] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [messageContent, setMessageContent] = useState(\"\");\n  const [selectedChatUser, setSelectedChatUser] = useState(null);\n  const [subscription, setSubscription] = useState(null);\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    if (token) {\n      const decodedToken = jwtDecode(token);\n      fetchUserDetails(decodedToken.user_id);\n      fetchDeeds(decodedToken.user_id);\n    }\n  }, [token]);\n\n  // clean up subscription on unmount\n  useEffect(() => {\n    return () => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n  }, [subscription]);\n\n  // Fetch logged-in user details\n  const fetchUserDetails = async userId => {\n    if (!userId) return;\n    try {\n      const response = await axios.get(`http://localhost:3000/users/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUser(response.data);\n    } catch (error) {\n      console.error(\"Error fetching user details:\", error);\n    }\n  };\n\n  // Fetch deeds created by logged-in user\n  const fetchDeeds = async userId => {\n    try {\n      const response = await axios.get(`http://localhost:3000/users/${userId}/deeds`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setDeeds(response.data);\n      const volunteeredResponse = await axios.get(`http://localhost:3000/users/${userId}/volunteered_deeds`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setVolunteeredDeeds(volunteeredResponse.data);\n    } catch (error) {\n      console.error(\"Error fetching deeds:\", error);\n    }\n  };\n\n  // Start chat with a volunteer\n  const handleStartChat = async (deed, volunteer) => {\n    console.log(\"starts now\");\n    try {\n      const response = await axios.post(`http://localhost:3000/chat_rooms`, {\n        deed_id: deed.id,\n        recipient_id: volunteer.id\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setChatRoom(response.data.chat_room);\n      setMessages(response.data.messages);\n      setSelectedChatUser(volunteer);\n\n      // Setup WebSocket connection for real-time messages\n      //   const cable = createConsumer(\"ws://localhost:3000/cable\");\n      //   const chatSubscription = cable.subscriptions.create(\n      //     { channel: \"ChatRoomChannel\", id: response.data.chat_room.id },\n      //     {\n      //       received: (newMessage) => {\n      //         setMessages((prevMessages) => [...prevMessages, newMessage]);\n      //       },\n      //     }\n      //   );\n      //   // Save subscription reference for cleanup\n      // return () => {\n      //   chatSubscription.unsubscribe();\n      // };\n\n      // Setup WebSocket connection for real-time messages\n      const cable = createConsumer(`ws://localhost:3000/cable?token=${token}`);\n      console.log(\"start off handle start chat\");\n      // console.log(response.data.chat_room.id);\n      const chatSubscriptions = cable.subscriptions.create({\n        channel: \"ChatRoomChannel\",\n        id: response.data.chat_room.id\n      }, {\n        received: newMessage => {\n          console.log(\"received new message\", {\n            newMessage\n          });\n          // setChatRoom(response.data.chat_room);\n          // setSelectedChatUser(volunteer);\n          // setMessages((prevMessages) => [...prevMessages, newMessage]);\n        }\n      });\n      console.log(chatSubscriptions);\n      setSubscription(chatSubscriptions);\n      return () => {\n        chatSubscriptions.unsubscribe(); // Cleanup WebSocket on unmount\n      };\n    } catch (error) {\n      console.error(\"Error starting chat:\", error);\n      alert(\"Failed to start chat.\");\n    }\n  };\n\n  // Send a message\n  const handleSendMessage = async () => {\n    if (!messageContent.trim() || !chatRoom) return;\n    // console.log(\"send msg\");\n    const newMessage = {\n      sender_id: user.id,\n      content: messageContent\n    };\n\n    // Optimistically update UI before sending request\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n    setMessageContent(\"\"); // Clear input field\n    console.log(\"send msg 2\");\n    try {\n      await axios.post(`http://localhost:3000/chat_rooms/${chatRoom.id}/messages`, {\n        content: messageContent\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"sent success\");\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      alert(\"Failed to send message.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"volunteer-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Volunteers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), deeds.length > 0 ? deeds.map(deed => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deed-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: deed.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this), deed.volunteers.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"volunteer-list\",\n          children: deed.volunteers.map(volunteer => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"volunteer-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [volunteer.first_name, \" \", volunteer.last_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"chat-button\",\n              onClick: () => handleStartChat(deed, deed.volunteers[0]),\n              children: [\"Chat with \", volunteer.first_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 23\n            }, this)]\n          }, volunteer.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No volunteers yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this)]\n      }, deed.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No deeds found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), volunteeredDeeds.length > 0 ? volunteeredDeeds.map(deed => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deed-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: deed.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"volunteer-list\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"volunteer-item\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"chat-button\",\n              onClick: () => handleStartChat(deed, user),\n              children: \"Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 23\n            }, this)\n          }, deed.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this)]\n      }, deed.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No deeds found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat Window\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), chatRoom ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: \"black\"\n          },\n          children: [\"Chat with \", selectedChatUser === null || selectedChatUser === void 0 ? void 0 : selectedChatUser.first_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-box\",\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"black\"\n            },\n            className: msg.sender_id === user.id ? \"outgoing\" : \"incoming\",\n            children: msg.content\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: messageContent,\n            onChange: e => setMessageContent(e.target.value),\n            placeholder: \"Type a message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a volunteer to start a chat.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"xHNn1FHpcEXbQvXGbdkB1tYdBE0=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jwtDecode","createConsumer","jsxDEV","_jsxDEV","ChatPage","_s","user","setUser","deeds","setDeeds","volunteeredDeeds","setVolunteeredDeeds","chatRoom","setChatRoom","messages","setMessages","messageContent","setMessageContent","selectedChatUser","setSelectedChatUser","subscription","setSubscription","token","localStorage","getItem","decodedToken","fetchUserDetails","user_id","fetchDeeds","unsubscribe","userId","response","get","headers","Authorization","data","error","console","volunteeredResponse","handleStartChat","deed","volunteer","log","post","deed_id","id","recipient_id","chat_room","cable","chatSubscriptions","subscriptions","create","channel","received","newMessage","alert","handleSendMessage","trim","sender_id","content","prevMessages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","description","volunteers","first_name","last_name","onClick","style","color","msg","index","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/home/kevin/deeder/frontend/src/pages/ChatPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { createConsumer } from \"@rails/actioncable\";\nimport \"./ChatPage.css\"; \n\nconst ChatPage = () => {\n  const [user, setUser] = useState(null);\n  const [deeds, setDeeds] = useState([]);\n  const [volunteeredDeeds, setVolunteeredDeeds] = useState([]);\n  const [chatRoom, setChatRoom] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [messageContent, setMessageContent] = useState(\"\");\n  const [selectedChatUser, setSelectedChatUser] = useState(null);\n  const [subscription, setSubscription] = useState(null);\n\n  const token = localStorage.getItem(\"token\");\n\n  useEffect(() => {\n    if (token) {\n      const decodedToken = jwtDecode(token);\n      fetchUserDetails(decodedToken.user_id);\n      fetchDeeds(decodedToken.user_id);\n    }\n  }, [token]);\n\n  // clean up subscription on unmount\n  useEffect(() => {\n    return () => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n  }, [subscription]);\n\n\n  // Fetch logged-in user details\n  const fetchUserDetails = async (userId) => {\n    if (!userId) return;\n    try {\n      const response = await axios.get(`http://localhost:3000/users/${userId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setUser(response.data);\n    } catch (error) {\n      console.error(\"Error fetching user details:\", error);\n    }\n  };\n\n  // Fetch deeds created by logged-in user\n  const fetchDeeds = async (userId) => {\n    try {\n      const response = await axios.get(`http://localhost:3000/users/${userId}/deeds`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setDeeds(response.data);\n      const volunteeredResponse = await axios.get(`http://localhost:3000/users/${userId}/volunteered_deeds`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n  \n      setVolunteeredDeeds(volunteeredResponse.data);\n    } catch (error) {\n      console.error(\"Error fetching deeds:\", error);\n    }\n  };\n\n  // Start chat with a volunteer\n  const handleStartChat = async (deed, volunteer) => {\n    console.log(\"starts now\");\n    try {\n      const response = await axios.post(\n        `http://localhost:3000/chat_rooms`,\n        { deed_id: deed.id, recipient_id: volunteer.id },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n  \n      setChatRoom(response.data.chat_room);\n      setMessages(response.data.messages);\n      setSelectedChatUser(volunteer);\n  \n      // Setup WebSocket connection for real-time messages\n    //   const cable = createConsumer(\"ws://localhost:3000/cable\");\n    //   const chatSubscription = cable.subscriptions.create(\n    //     { channel: \"ChatRoomChannel\", id: response.data.chat_room.id },\n    //     {\n    //       received: (newMessage) => {\n    //         setMessages((prevMessages) => [...prevMessages, newMessage]);\n    //       },\n    //     }\n    //   );\n    //   // Save subscription reference for cleanup\n    // return () => {\n    //   chatSubscription.unsubscribe();\n    // };\n\n      // Setup WebSocket connection for real-time messages\n      const cable = createConsumer(`ws://localhost:3000/cable?token=${token}`);\n      console.log(\"start off handle start chat\");\n      // console.log(response.data.chat_room.id);\n      const chatSubscriptions = cable.subscriptions.create(\n      \n        { channel: \"ChatRoomChannel\", id: response.data.chat_room.id },\n        {\n          received: (newMessage) => {\n            console.log(\"received new message\", { newMessage });\n            // setChatRoom(response.data.chat_room);\n            // setSelectedChatUser(volunteer);\n            // setMessages((prevMessages) => [...prevMessages, newMessage]);\n          },\n        }\n      );\n      console.log(chatSubscriptions)\n\n      setSubscription(chatSubscriptions);\n      return () => {\n        chatSubscriptions.unsubscribe(); // Cleanup WebSocket on unmount\n      };\n    } catch (error) {\n      console.error(\"Error starting chat:\", error);\n      alert(\"Failed to start chat.\");\n    }\n  };\n  \n\n  // Send a message\n  const handleSendMessage = async () => {\n    if (!messageContent.trim() || !chatRoom) return;\n    // console.log(\"send msg\");\n    const newMessage = {\n      sender_id: user.id,\n      content: messageContent,\n    };\n\n    // Optimistically update UI before sending request\n  setMessages((prevMessages) => [...prevMessages, newMessage]);\n  setMessageContent(\"\"); // Clear input field\n    console.log(\"send msg 2\");\n\n    try {\n      await axios.post(\n        `http://localhost:3000/chat_rooms/${chatRoom.id}/messages`,\n        { content: messageContent },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      console.log(\"sent success\");\n      \n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      alert(\"Failed to send message.\");\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      {/* Left Column - List of Volunteers */}\n      <div className=\"volunteer-column\">\n        <h2>My Volunteers</h2>\n        {deeds.length > 0 ? (\n          deeds.map((deed) => (\n            <div key={deed.id} className=\"deed-card\">\n              <h3>{deed.description}</h3>\n              {/* List of Volunteers */}\n              {deed.volunteers.length > 0 ? (\n                <div className=\"volunteer-list\">\n                  {deed.volunteers.map((volunteer) => (\n                    <div key={volunteer.id} className=\"volunteer-item\">\n                      <p>{volunteer.first_name} {volunteer.last_name}</p>\n                      <button\n                        className=\"chat-button\"\n                        onClick={() => handleStartChat(deed, deed.volunteers[0])}\n                      >\n                        Chat with {volunteer.first_name}\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <p>No volunteers yet.</p>\n              )}\n            </div>\n          ))\n        ) : (\n          <p>No deeds found.</p>\n        )}\n        {volunteeredDeeds.length > 0 ? (\n          volunteeredDeeds.map((deed) => (\n            <div key={deed.id} className=\"deed-card\">\n              <h3>{deed.description}</h3>\n              {/* List of Volunteers */}\n                <div className=\"volunteer-list\">\n                    <div key={deed.id} className=\"volunteer-item\">\n                      <button\n                        className=\"chat-button\"\n                        onClick={() => handleStartChat(deed, user)}\n                      >\n                        Chat\n                      </button>\n                    </div>\n                </div>\n            </div>\n          ))\n        ) : (\n          <p>No deeds found.</p>\n        )}\n      </div>\n\n      {/* Right Column - Chat Messages */}\n      <div className=\"chat-column\">\n        <h2>Chat Window</h2>\n        {chatRoom ? (\n          <div>\n            <h3 style={{ color: \"black\" }}>Chat with {selectedChatUser?.first_name}</h3>\n            <div className=\"chat-box\">\n              {messages.map((msg, index) => (\n                <p style={{ color: \"black\" }} key={index} className={msg.sender_id === user.id ? \"outgoing\" : \"incoming\"}>\n                  {msg.content}\n                </p>\n              ))}\n            </div>\n            <div className=\"chat-input\">\n              <input\n                type=\"text\"\n                value={messageContent}\n                onChange={(e) => setMessageContent(e.target.value)}\n                placeholder=\"Type a message...\"\n              />\n              <button onClick={handleSendMessage}>Send</button>\n            </div>\n          </div>\n        ) : (\n          <p>Select a volunteer to start a chat.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}