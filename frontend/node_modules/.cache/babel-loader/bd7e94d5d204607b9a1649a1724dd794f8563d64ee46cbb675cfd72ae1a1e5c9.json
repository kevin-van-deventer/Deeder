{"ast":null,"code":"var _jsxFileName = \"/home/kevin/deeder/frontend/src/pages/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport consumer from \"../services/actionCableConsumer\";\nimport { fetchMessages, sendMessage } from \"../services/chatApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    chatRoomId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  useEffect(() => {\n    fetchMessages(chatRoomId).then(setMessages);\n    const subscription = consumer.subscriptions.create({\n      channel: \"ChatRoomChannel\",\n      id: chatRoomId\n    }, {\n      received: data => {\n        setMessages(prev => [...prev, data.message]);\n      }\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [chatRoomId]);\n  const handleSend = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    await sendMessage(chatRoomId, newMessage);\n    setNewMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.user.name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSend,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"NNsXOz1ihg85j8kli8ZROuxjZCY=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useParams","consumer","fetchMessages","sendMessage","jsxDEV","_jsxDEV","Chat","_s","chatRoomId","messages","setMessages","newMessage","setNewMessage","then","subscription","subscriptions","create","channel","id","received","data","prev","message","unsubscribe","handleSend","e","preventDefault","trim","className","children","map","msg","index","user","name","fileName","_jsxFileName","lineNumber","columnNumber","content","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/kevin/deeder/frontend/src/pages/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport consumer from \"../services/actionCableConsumer\";\nimport { fetchMessages, sendMessage } from \"../services/chatApi\";\n\nconst Chat = () => {\n  const { chatRoomId } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  useEffect(() => {\n    fetchMessages(chatRoomId).then(setMessages);\n    \n    const subscription = consumer.subscriptions.create(\n      { channel: \"ChatRoomChannel\", id: chatRoomId },\n      {\n        received: (data) => {\n          setMessages((prev) => [...prev, data.message]);\n        },\n      }\n    );\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [chatRoomId]);\n\n  const handleSend = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    await sendMessage(chatRoomId, newMessage);\n    setNewMessage(\"\");\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className=\"message\">\n            <strong>{msg.user.name}:</strong> {msg.content}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSend}>\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Type a message...\"\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}