{"ast":null,"code":"var _jsxFileName = \"/home/kevin/deeder/frontend/src/pages/MapsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { GoogleMap, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport { LoadScriptNext } from \"@react-google-maps/api\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100vh\"\n};\n// chamge center of map to be current logged in users lat and lon\nconst center = {\n  lat: -25.7479,\n  lng: 28.2293\n}; // Default center (Pretoria, South Africa)\n\nconst MapsPage = () => {\n  _s();\n  const [deeds, setDeeds] = useState([]);\n  const [selectedDeed, setSelectedDeed] = useState(null);\n  const apiKey = \"AIzaSyAx_Rbj5JBqB_QStMi27jDFWMf3HJ-aZm0\"; // Replace with your actual API key\n\n  const token = localStorage.getItem(\"token\");\n  const userId = token ? jwtDecode(token).user_id : null;\n  useEffect(() => {\n    fetchDeeds();\n  }, []);\n\n  // Fetch all unfulfilled deeds with lat/lon\n  const fetchDeeds = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3000/deeds\");\n      setDeeds(response.data);\n    } catch (error) {\n      console.error(\"Error fetching deeds:\", error);\n    }\n  };\n\n  // Handle volunteer request\n  const handleVolunteer = async (deedId, requesterId) => {\n    if (userId === requesterId) {\n      alert(\"You cannot volunteer for your own deed.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:3000/deeds/${deedId}/volunteer`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(response.data.message);\n      fetchDeeds(); // Refresh deeds list\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error volunteering:\", error);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Failed to volunteer.\");\n    }\n  };\n\n  // Function to format date\n  const formatDate = dateString => {\n    if (!dateString) return \"N/A\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-US\", {\n      weekday: \"long\",\n      // Example: Monday\n      year: \"numeric\",\n      month: \"long\",\n      // Example: January\n      day: \"numeric\" // Example: 5\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScriptNext, {\n    googleMapsApiKey: apiKey,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 10,\n      center: center,\n      children: [deeds.map(deed => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: parseFloat(deed.latitude),\n          lng: parseFloat(deed.longitude)\n        },\n        onClick: () => setSelectedDeed(deed)\n      }, deed.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)), selectedDeed && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: {\n          lat: parseFloat(selectedDeed.latitude),\n          lng: parseFloat(selectedDeed.longitude)\n        },\n        onCloseClick: () => setSelectedDeed(null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedDeed.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 18\n            }, this), \" \", selectedDeed.deed_type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Volunteers:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 18\n            }, this), \" \", selectedDeed.volunteer_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 18\n            }, this), \" \", selectedDeed.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Created On:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 18\n            }, this), \" \", formatDate(selectedDeed.created_at)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), userId && selectedDeed.requester_id !== userId && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVolunteer(selectedDeed.id, selectedDeed.requester_id),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(MapsPage, \"vC9jmc+QCIABE+2/ttIw6HERxlA=\");\n_c = MapsPage;\nexport default MapsPage;\nvar _c;\n$RefreshReg$(_c, \"MapsPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","GoogleMap","Marker","InfoWindow","LoadScriptNext","jwtDecode","jsxDEV","_jsxDEV","mapContainerStyle","width","height","center","lat","lng","MapsPage","_s","deeds","setDeeds","selectedDeed","setSelectedDeed","apiKey","token","localStorage","getItem","userId","user_id","fetchDeeds","response","get","data","error","console","handleVolunteer","deedId","requesterId","alert","post","headers","Authorization","message","_error$response","_error$response$data","formatDate","dateString","date","Date","toLocaleDateString","weekday","year","month","day","googleMapsApiKey","children","zoom","map","deed","position","parseFloat","latitude","longitude","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","onCloseClick","description","deed_type","volunteer_count","status","created_at","requester_id","_c","$RefreshReg$"],"sources":["/home/kevin/deeder/frontend/src/pages/MapsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { GoogleMap, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport { LoadScriptNext } from \"@react-google-maps/api\";\nimport { jwtDecode } from \"jwt-decode\";\n\nconst mapContainerStyle = { width: \"100%\", height: \"100vh\" };\n// chamge center of map to be current logged in users lat and lon\nconst center = { lat: -25.7479, lng: 28.2293 }; // Default center (Pretoria, South Africa)\n\nconst MapsPage = () => {\n  const [deeds, setDeeds] = useState([]);\n  const [selectedDeed, setSelectedDeed] = useState(null);\n  const apiKey = \"AIzaSyAx_Rbj5JBqB_QStMi27jDFWMf3HJ-aZm0\"; // Replace with your actual API key\n\n  const token = localStorage.getItem(\"token\");\n  const userId = token ? jwtDecode(token).user_id : null;\n\n  useEffect(() => {\n    fetchDeeds();\n  }, []);\n\n  // Fetch all unfulfilled deeds with lat/lon\n  const fetchDeeds = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3000/deeds\");\n      setDeeds(response.data);\n    } catch (error) {\n      console.error(\"Error fetching deeds:\", error);\n    }\n  };\n\n  // Handle volunteer request\n  const handleVolunteer = async (deedId, requesterId) => {\n    if (userId === requesterId) {\n      alert(\"You cannot volunteer for your own deed.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\n        `http://localhost:3000/deeds/${deedId}/volunteer`,\n        {},\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      alert(response.data.message);\n      fetchDeeds(); // Refresh deeds list\n    } catch (error) {\n      console.error(\"Error volunteering:\", error);\n      alert(error.response?.data?.error || \"Failed to volunteer.\");\n    }\n  };\n\n   // Function to format date\n   const formatDate = (dateString) => {\n    if (!dateString) return \"N/A\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-US\", {\n      weekday: \"long\", // Example: Monday\n      year: \"numeric\",\n      month: \"long\", // Example: January\n      day: \"numeric\", // Example: 5\n    });\n  };\n\n  return (\n    <LoadScriptNext googleMapsApiKey={apiKey}>\n      <GoogleMap mapContainerStyle={mapContainerStyle} zoom={10} center={center}>\n        {deeds.map((deed) => (\n          <Marker\n            key={deed.id}\n            position={{ lat: parseFloat(deed.latitude), lng: parseFloat(deed.longitude) }}\n            onClick={() => setSelectedDeed(deed)}\n          />\n        ))}\n\n        {selectedDeed && (\n          <InfoWindow\n            position={{ lat: parseFloat(selectedDeed.latitude), lng: parseFloat(selectedDeed.longitude) }}\n            onCloseClick={() => setSelectedDeed(null)}\n          >\n            <div>\n              <h3>{selectedDeed.description}</h3>\n              <p><strong>Type:</strong> {selectedDeed.deed_type}</p>\n              <p><strong>Volunteers:</strong> {selectedDeed.volunteer_count}</p>\n              <p><strong>Status:</strong> {selectedDeed.status}</p>\n              <p><strong>Created On:</strong> {formatDate(selectedDeed.created_at)}</p>\n              {userId && selectedDeed.requester_id !== userId && (\n                <button onClick={() => handleVolunteer(selectedDeed.id, selectedDeed.requester_id)}>\n                  Accept\n                </button>\n              )}\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    </LoadScriptNext>\n  );\n};\n\nexport default MapsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}