{"ast":null,"code":"var _jsxFileName = \"/home/kevin/deeder/frontend/src/pages/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { createConsumer } from \"@rails/actioncable\";\nimport Navbar from \"../components/NavBar\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./ChatPage.css\"; // Import styles\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [deeds, setDeeds] = useState([]);\n  const [file, setFile] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isAddingDeed, setIsAddingDeed] = useState(false);\n  const [formData, setFormData] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\"\n  });\n  const [fulfilledDeeds, setFulfilledDeeds] = useState(0);\n  const [unfulfilledDeeds, setUnfulfilledDeeds] = useState(0);\n  const [deedsFulfilledForOthers, setDeedsFulfilledForOthers] = useState(0);\n  const [volunteeredDeeds, setVolunteeredDeeds] = useState([]);\n  const [completedVolunteeredDeeds, setCompletedVolunteeredDeeds] = useState([]);\n  const [deedData, setDeedData] = useState({\n    description: \"\",\n    deed_type: \"one-time\",\n    address: \"\",\n    latitude: \"\",\n    longitude: \"\"\n  });\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    if (token) {\n      const decodedToken = jwtDecode(token);\n      fetchUserDetails(decodedToken.user_id);\n      fetchDeeds(decodedToken.user_id);\n    }\n\n    // Set up ActionCable to listen for deed updates\n    const cable = createConsumer(\"ws://localhost:3000/cable\");\n    const deedsChannel = cable.subscriptions.create(\"DeedsChannel\", {\n      received: data => {\n        console.log(\"Received deed update:\", data);\n        setDeeds(data.deeds);\n      }\n    });\n    return () => {\n      deedsChannel.unsubscribe();\n    };\n  }, [token]);\n\n  // fetch user details from api\n  const fetchUserDetails = async userId => {\n    if (!userId) return;\n    try {\n      const response = await axios.get(`http://localhost:3000/users/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUser(response.data);\n      setUnfulfilledDeeds(response.data.unfulfilled_deeds);\n\n      // Fetch volunteered deeds\n      const volunteeredResponse = await axios.get(`http://localhost:3000/users/${userId}/volunteered_deeds`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const allVolunteeredDeeds = volunteeredResponse.data;\n      // Filter only deeds where the user was the one who completed them\n\n      setVolunteeredDeeds(allVolunteeredDeeds);\n    } catch (error) {\n      console.error(\"Error fetching user details:\", error);\n    }\n  };\n\n  // Fetch deeds requested or volunteered by the user\n  const fetchDeeds = async userId => {\n    try {\n      const response = await axios.get(`http://localhost:3000/users/${userId}/deeds`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setDeeds(response.data);\n      const volunteeredResponse = await axios.get(`http://localhost:3000/users/${userId}/volunteered_deeds`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setVolunteeredDeeds(volunteeredResponse.data);\n    } catch (error) {\n      console.error(\"Error fetching deeds:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deed-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Volunteers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), deeds.length > 0 ? deeds.map(deed => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deed-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: deed.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), deed.volunteers.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volunteer-list\",\n        children: deed.volunteers.map(volunteer => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"volunteer-item\",\n            children: [volunteer.first_name, \" \", volunteer.last_name]\n          }, volunteer.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"\",\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No volunteers yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }, this)]\n    }, deed.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No deeds found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"XSi+oE0BgPlpz4Rc+jbh09aD40k=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jwtDecode","createConsumer","Navbar","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatPage","_s","navigate","user","setUser","deeds","setDeeds","file","setFile","isEditing","setIsEditing","isAddingDeed","setIsAddingDeed","formData","setFormData","first_name","last_name","email","fulfilledDeeds","setFulfilledDeeds","unfulfilledDeeds","setUnfulfilledDeeds","deedsFulfilledForOthers","setDeedsFulfilledForOthers","volunteeredDeeds","setVolunteeredDeeds","completedVolunteeredDeeds","setCompletedVolunteeredDeeds","deedData","setDeedData","description","deed_type","address","latitude","longitude","token","localStorage","getItem","decodedToken","fetchUserDetails","user_id","fetchDeeds","cable","deedsChannel","subscriptions","create","received","data","console","log","unsubscribe","userId","response","get","headers","Authorization","unfulfilled_deeds","volunteeredResponse","allVolunteeredDeeds","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","deed","volunteers","volunteer","id","type","_c","$RefreshReg$"],"sources":["/home/kevin/deeder/frontend/src/pages/ChatPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { createConsumer } from \"@rails/actioncable\";\nimport Navbar from \"../components/NavBar\";\nimport { useNavigate } from \"react-router-dom\";\n\n\n\nimport \"./ChatPage.css\"; // Import styles\n\nconst ChatPage = () => {\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [deeds, setDeeds] = useState([]);\n  const [file, setFile] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isAddingDeed, setIsAddingDeed] = useState(false);\n  const [formData, setFormData] = useState({ first_name: \"\", last_name: \"\", email: \"\" });\n  const [fulfilledDeeds, setFulfilledDeeds] = useState(0);\n  const [unfulfilledDeeds, setUnfulfilledDeeds] = useState(0);\n  const [deedsFulfilledForOthers, setDeedsFulfilledForOthers] = useState(0);\n  const [volunteeredDeeds, setVolunteeredDeeds] = useState([]);\n  const [completedVolunteeredDeeds, setCompletedVolunteeredDeeds] = useState([]);\n  const [deedData, setDeedData] = useState({\n    description: \"\",\n    deed_type: \"one-time\",\n    address: \"\",\n    latitude: \"\",\n    longitude: \"\"\n  });\n\n  const token = localStorage.getItem(\"token\");\n\n  useEffect(() => {\n    if (token) {\n      const decodedToken = jwtDecode(token);\n      fetchUserDetails(decodedToken.user_id);\n      fetchDeeds(decodedToken.user_id);\n    }\n\n    // Set up ActionCable to listen for deed updates\n  const cable = createConsumer(\"ws://localhost:3000/cable\");\n\n  const deedsChannel = cable.subscriptions.create(\"DeedsChannel\", {\n    received: (data) => {\n      console.log(\"Received deed update:\", data);\n      setDeeds(data.deeds);\n    },\n  });\n\n  return () => {\n    deedsChannel.unsubscribe();\n  };\n\n}, [token]);\n\n  // fetch user details from api\n  const fetchUserDetails = async (userId) => {\n\n    if (!userId) return;\n\n    try {\n      const response = await axios.get(`http://localhost:3000/users/${userId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      setUser(response.data);\n      setUnfulfilledDeeds(response.data.unfulfilled_deeds);\n\n      // Fetch volunteered deeds\n      const volunteeredResponse = await axios.get(`http://localhost:3000/users/${userId}/volunteered_deeds`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      const allVolunteeredDeeds = volunteeredResponse.data;\n      // Filter only deeds where the user was the one who completed them\n      \n      setVolunteeredDeeds(allVolunteeredDeeds);\n      } catch (error) {\n        console.error(\"Error fetching user details:\", error);\n      }\n    };\n\n\n  // Fetch deeds requested or volunteered by the user\n  const fetchDeeds = async (userId) => {\n    try {\n      const response = await axios.get(`http://localhost:3000/users/${userId}/deeds`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      \n      setDeeds(response.data);\n      const volunteeredResponse = await axios.get(`http://localhost:3000/users/${userId}/volunteered_deeds`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n  \n      setVolunteeredDeeds(volunteeredResponse.data);\n    } catch (error) {\n      console.error(\"Error fetching deeds:\", error);\n    }\n  };\n\n  return (\n    <div className=\"deed-list-container\">\n      <h2>My Volunteers</h2>\n      {deeds.length > 0 ? (\n        deeds.map((deed) => (\n          <div key={deed.id} className=\"deed-card\">\n            <h3>{deed.description}</h3>\n            {/* List of Volunteers */}\n            {deed.volunteers.length > 0 ? (\n              <div className=\"volunteer-list\">\n                {deed.volunteers.map((volunteer) => (\n                  <>\n                    <p key={volunteer.id} className=\"volunteer-item\">\n                      {volunteer.first_name} {volunteer.last_name}\n                    </p>\n                    <button type=\"\">Chat</button>\n                  </>\n                ))}\n              </div>\n            ) : (\n              <p>No volunteers yet.</p>\n            )}\n          </div>\n        ))\n      ) : (\n        <p>No deeds found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default ChatPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,cAAc,QAAQ,oBAAoB;AACnD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAI9C,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC;IAAEyB,UAAU,EAAE,EAAE;IAAEC,SAAS,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EACtF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAAC8B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACgC,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EACzE,MAAM,CAACkC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACoC,yBAAyB,EAAEC,4BAA4B,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAC9E,MAAM,CAACsC,QAAQ,EAAEC,WAAW,CAAC,GAAGvC,QAAQ,CAAC;IACvCwC,WAAW,EAAE,EAAE;IACfC,SAAS,EAAE,UAAU;IACrBC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3ChD,SAAS,CAAC,MAAM;IACd,IAAI8C,KAAK,EAAE;MACT,MAAMG,YAAY,GAAG9C,SAAS,CAAC2C,KAAK,CAAC;MACrCI,gBAAgB,CAACD,YAAY,CAACE,OAAO,CAAC;MACtCC,UAAU,CAACH,YAAY,CAACE,OAAO,CAAC;IAClC;;IAEA;IACF,MAAME,KAAK,GAAGjD,cAAc,CAAC,2BAA2B,CAAC;IAEzD,MAAMkD,YAAY,GAAGD,KAAK,CAACE,aAAa,CAACC,MAAM,CAAC,cAAc,EAAE;MAC9DC,QAAQ,EAAGC,IAAI,IAAK;QAClBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,IAAI,CAAC;QAC1CzC,QAAQ,CAACyC,IAAI,CAAC1C,KAAK,CAAC;MACtB;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXsC,YAAY,CAACO,WAAW,CAAC,CAAC;IAC5B,CAAC;EAEH,CAAC,EAAE,CAACf,KAAK,CAAC,CAAC;;EAET;EACA,MAAMI,gBAAgB,GAAG,MAAOY,MAAM,IAAK;IAEzC,IAAI,CAACA,MAAM,EAAE;IAEb,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM7D,KAAK,CAAC8D,GAAG,CAAC,+BAA+BF,MAAM,EAAE,EAAE;QACxEG,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUpB,KAAK;QAAG;MAC9C,CAAC,CAAC;MAEF/B,OAAO,CAACgD,QAAQ,CAACL,IAAI,CAAC;MACtB1B,mBAAmB,CAAC+B,QAAQ,CAACL,IAAI,CAACS,iBAAiB,CAAC;;MAEpD;MACA,MAAMC,mBAAmB,GAAG,MAAMlE,KAAK,CAAC8D,GAAG,CAAC,+BAA+BF,MAAM,oBAAoB,EAAE;QACrGG,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUpB,KAAK;QAAG;MAC9C,CAAC,CAAC;MAEF,MAAMuB,mBAAmB,GAAGD,mBAAmB,CAACV,IAAI;MACpD;;MAEAtB,mBAAmB,CAACiC,mBAAmB,CAAC;IACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;;EAGH;EACA,MAAMlB,UAAU,GAAG,MAAOU,MAAM,IAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM7D,KAAK,CAAC8D,GAAG,CAAC,+BAA+BF,MAAM,QAAQ,EAAE;QAC9EG,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUpB,KAAK;QAAG;MAC9C,CAAC,CAAC;MAGF7B,QAAQ,CAAC8C,QAAQ,CAACL,IAAI,CAAC;MACvB,MAAMU,mBAAmB,GAAG,MAAMlE,KAAK,CAAC8D,GAAG,CAAC,+BAA+BF,MAAM,oBAAoB,EAAE;QACrGG,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUpB,KAAK;QAAG;MAC9C,CAAC,CAAC;MAEFV,mBAAmB,CAACgC,mBAAmB,CAACV,IAAI,CAAC;IAC/C,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACE9D,OAAA;IAAK+D,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClChE,OAAA;MAAAgE,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrB5D,KAAK,CAAC6D,MAAM,GAAG,CAAC,GACf7D,KAAK,CAAC8D,GAAG,CAAEC,IAAI,iBACbvE,OAAA;MAAmB+D,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtChE,OAAA;QAAAgE,QAAA,EAAKO,IAAI,CAACtC;MAAW;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAE1BG,IAAI,CAACC,UAAU,CAACH,MAAM,GAAG,CAAC,gBACzBrE,OAAA;QAAK+D,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5BO,IAAI,CAACC,UAAU,CAACF,GAAG,CAAEG,SAAS,iBAC7BzE,OAAA,CAAAE,SAAA;UAAA8D,QAAA,gBACEhE,OAAA;YAAsB+D,SAAS,EAAC,gBAAgB;YAAAC,QAAA,GAC7CS,SAAS,CAACvD,UAAU,EAAC,GAAC,EAACuD,SAAS,CAACtD,SAAS;UAAA,GADrCsD,SAAS,CAACC,EAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEjB,CAAC,eACJpE,OAAA;YAAQ2E,IAAI,EAAC,EAAE;YAAAX,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eAC7B,CACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,gBAENpE,OAAA;QAAAgE,QAAA,EAAG;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACzB;IAAA,GAhBOG,IAAI,CAACG,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiBZ,CACN,CAAC,gBAEFpE,OAAA;MAAAgE,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACtB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAAhE,EAAA,CA1HKD,QAAQ;EAAA,QACKL,WAAW;AAAA;AAAA8E,EAAA,GADxBzE,QAAQ;AA4Hd,eAAeA,QAAQ;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}